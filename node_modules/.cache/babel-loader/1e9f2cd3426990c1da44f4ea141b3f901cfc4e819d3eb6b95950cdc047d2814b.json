{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/CODE/Openclassrooms/Openclassrooms-P12_SportSee/src/home.tsx\",\n  _s = $RefreshSig$();\nimport \"./_home.scss\";\nimport { SideNav } from \"./SideNav\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMockData } from \"./fetchMockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [userData, setUserData] = useState([]);\n  useEffect(() => {\n    // Utilisez fetchData à l'intérieur d'un effet de chargement initial\n    const fetchDataAndDoSomething = async () => {\n      try {\n        const fetchedUserData = await fetchMockData();\n        // Utilisez les données récupérées comme nécessaire\n        setUserData(fetchedUserData);\n        console.log(\"Données dans le composant:\", fetchedUserData);\n      } catch (error) {\n        // Gérez les erreurs ici\n        console.error(\"Erreur dans le composant:\", error.message);\n      }\n    };\n    fetchDataAndDoSomething();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \"put pic\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: userData.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.userInfos.firstName\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"MEi9diF6EeXMji3OmOnykM+Lnog=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["SideNav","useEffect","useState","fetchMockData","jsxDEV","_jsxDEV","Home","_s","userData","setUserData","fetchDataAndDoSomething","fetchedUserData","console","log","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","userInfos","firstName","id","_c","$RefreshReg$"],"sources":["/Users/ben/Desktop/CODE/Openclassrooms/Openclassrooms-P12_SportSee/src/home.tsx"],"sourcesContent":["import \"./_home.scss\";\nimport { SideNav } from \"./SideNav\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMockData } from \"./fetchMockData\";\nimport { iUser } from \"./users\";\n\nexport const Home = () => {\n  const [userData, setUserData] = useState<iUser[]>([]);\n\n  useEffect(() => {\n    // Utilisez fetchData à l'intérieur d'un effet de chargement initial\n    const fetchDataAndDoSomething = async () => {\n      try {\n        const fetchedUserData: iUser[] = await fetchMockData();\n        // Utilisez les données récupérées comme nécessaire\n        setUserData(fetchedUserData);\n        console.log(\"Données dans le composant:\", fetchedUserData);\n      } catch (error) {\n        // Gérez les erreurs ici\n        console.error(\"Erreur dans le composant:\", (error as Error).message);\n      }\n    };\n\n    fetchDataAndDoSomething();\n  }, []);\n\n  return (\n    <main>\n      <SideNav />\n      <section>\n        <h1 className=\"title\">Login</h1>\n        put pic\n        <div className=\"login\">\n          {userData.map((user) => (\n            <p key={user.id}>{user.userInfos.firstName}</p>\n          ))}\n        </div>\n      </section>\n    </main>\n  );\n};\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAU,EAAE,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACF,MAAMC,eAAwB,GAAG,MAAMR,aAAa,CAAC,CAAC;QACtD;QACAM,WAAW,CAACE,eAAe,CAAC;QAC5BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,eAAe,CAAC;MAC5D,CAAC,CAAC,OAAOG,KAAK,EAAE;QACd;QACAF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAGA,KAAK,CAAWC,OAAO,CAAC;MACtE;IACF,CAAC;IAEDL,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACL,OAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAIgB,SAAS,EAAC,OAAO;QAAAL,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,WAEhC,eAAAf,OAAA;QAAKgB,SAAS,EAAC,OAAO;QAAAL,QAAA,EACnBR,QAAQ,CAACc,GAAG,CAAEC,IAAI,iBACjBlB,OAAA;UAAAW,QAAA,EAAkBO,IAAI,CAACC,SAAS,CAACC;QAAS,GAAlCF,IAAI,CAACG,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAC/C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX,CAAC;AAACb,EAAA,CAlCWD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}